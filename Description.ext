//https://community.bistudio.com/wiki/Description.ext

author="Sniper Party / Caranfin";
briefingName = "[TvT10] Phantoms";

//Overview text and picture for the mission list (admin sees when selecting missions, also shown when slotting in)
overviewText = "CSAT divers attempt to tag hidden FIA equipment stashes to gain intel"; //This is overwritten by the editor-set description
//overviewPicture = "LoadScreen.paa"; This does not work on dedicated servers. Arma is bad.

//Loading screen texts and picture for loading the mission
OnLoadName = "[TvT10] Phantoms";
OnLoadMission = "Sometimes the greatest victories are achieved without a single shot";
//loadscreen = "";

saving = 0; //Set saving to 0 so that you can exit the mission without saving and causing dumb bugs when reloading
disabledai = 1; //Disable AI taking over un-taken player slots

//Default respawn options
respawn = "NONE";
respawnDelay = 0;
respawnDialog = 0;
respawnOnStart = 0;
respawnTemplates[] = {"Spectator"};

enableDebugConsole = 1; //enable debug console for the admin

ReviveMode = 1;                         //0: disabled, 1: enabled, 2: controlled by player attributes
ReviveUnconsciousStateMode = 0;         //0: basic, 1: advanced, 2: realistic
ReviveRequiredTrait = 0;                //0: none, 1: medic trait is required
ReviveRequiredItems = 2;                //0: none, 1: medkit, 2: medkit or first aid kit
ReviveRequiredItemsFakConsumed = 1;     //0: first aid kit is not consumed upon revive, 1: first aid kit is consumed
ReviveDelay = 6;                        //time needed to revive someone (in secs)
ReviveMedicSpeedMultiplier = 2;         //speed multiplier for revive performed by medic
ReviveForceRespawnDelay = 3;            //time needed to perform force respawn (in secs)
ReviveBleedOutDelay = 120;              //unconscious state duration (in secs)


//Game type stuff. Doesn't matter, but will get shown in mission select.
class Header {
	gameType = TDM;
	minPlayers = 3;
	maxPlayers = 10;
};

class ACE_Settings
{
	#include "aceSettings.hpp"
};

//Mission ending states, used via BIS_fnc_endMission from end.sqf
class CfgDebriefing
{
	class Dead {
		title = "You are dead";
		subtitle = "Whichever team won, you lost.";
		picture = "KIA";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class BlueVictoryAll {
		title = "Complete success";
		subtitle = "None of your shipment was tampered with";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		picturecolor[] = {0.0,0.3,0.6,1};
	};

	class BlueVictory {
		title = "Mission success";
		subtitle = "Most of the shipment is safe";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		picturecolor[] = {0.0,0.3,0.6,1};
	};

	class BlueLoss {
		title = "Mission failed";
		subtitle = "Most of the shipment was compromised";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_ca.paa";
		pictureColor[] = {1.0,0.3,0.2,1.0};
	};

	class RedVictoryAll {
		title = "Complete success";
		subtitle = "Entire shipment bugged";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		picturecolor[] = {0.0,0.3,0.6,1};
	};

	class RedVictory {
		title = "Mission success";
		subtitle = "Most of the shipment is tracked";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		picturecolor[] = {0.0,0.3,0.6,1};
	};

	class RedLossAmount {
		title = "Mission failed";
		subtitle = "Not enough boxes bugged";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_ca.paa";
		pictureColor[] = {1.0,0.3,0.2,1.0};
	};

	class RedLossSearch {
		title = "Mission failed";
		subtitle = "Too much suspicion raised";
		picture = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_ca.paa";
		pictureColor[] = {1.0,0.3,0.2,1.0};
	};
};

//Functions, used to define preSet.sqf as "preInit". You can also make your own functions, but that's generally not needed.
//More information on defining your own functions: https://community.bistudio.com/wiki/Functions_Library_%28Arma_3%29#Adding_a_Function
class CfgFunctions
{
	class ARTR
	{
		class eden
		{
			class setConditions {};
			class addIrregularGearEden {};
		};

		class preinit
		{
			class missionSettings { preInit = 1; };
			class randInt {};
			class populateArray {};
			class chooseRandoms {};
			class presenceArray {};
		};

		class mods
		{
			class checkMod {};
			class initRevive { preInit = 1; };
			class initASR { preInit = 1; };
			class initTFAR { preInit = 1; };
			class initACRE { preInit = 1; };
			class TFARRadiosAdded {};
			class TFARSpeaking {};
			class TFARVolumeChange {};
		};

		class ai
		{
			class initSkills { preInit = 1; };
			class setSkills { postInit = 1; };
			class HCInit {};
			class HCSetOwner { postInit = 1; };
			class getAIController {};
		};

		class gear
		{
			class addIrregularGear {};
			class getIrregularBackpack {};
			class getIrregularGear {};
			class getIrregularGearSets {};
			class getIrregularHeadwear {};
			class getIrregularItems {};
			class getIrregularLinkItems {};
			class getIrregularUniform {};
			class getIrregularVest {};
			class getIrregularWeaponItems {};
			class getIrregularWeapons {};
			class setIrregularGearSets {};
			class playerGearByMod {};
		};

		class missionLogic
		{
			class briefingFile {};
			class serverEnding {};
			class clientEnding {};
			class emptyTrigger {};
			class initBriefing { postInit = 1; };
			class JIPSetup { preInit = 1; };
			class defenderHit {};
			class defenderKilled {};
			class boxTracked {};
			class initUAV {};
			class viewUAV {};
			class createUAV {};
			class trackerAction {};
		};
	};
};

class CfgRemoteExec
{
	// List of script functions allowed to be sent from client via remoteExec
	class Functions
	{
	       mode = 2;					//0: off, 1: on with whitelist, 2: on ignoring whitelist
	       jip = 1;		 				// Ability to send JIP messages: 0-disabled, 1-enabled (default)

	       class clientEnding
	       {
	       		allowedTargets=0; 		// 0: can target anyone, 1: only clients, 2: only server
	       		jip = 1; 				// JIP setting override
	       };

		   class boxTracked
		   {
			   allowedTargets = 0;
			   jip = 1;
		   };
	};

	// List of script commands allowed to be sent from client via remoteExec
	class Commands
	{
		class reveal { allowedTargets=0; jip=0; };
	};
};

//Parameters, accessible from the role selection screen and used to switch between pre-defined options for the mission (time of day, gear, headless client). Parameters are in an array called paramsArray.
//So, to check, refer to paramsArray select i, where i is array index (starting with 0)
class Params
{
	class ExtendedUAV {
		title = "Extended diver info";
		values[] = {0,1};
		texts[] = {"OFF", "ON"};
		default = 0;
	};
};

class CfgORBAT
{
	class ARTR
	{
		class Example
		{
			id = 1;
			commander = "GreekMen";
			commanderRank = "Captain";
			description = "Unit description";
			insignia = "\a3\missions_f_epa\data\img\orbat\I_AAF_ca.paa";
			side = "Resistance";
			size = "Platoon";
			type = "Infantry";
			text = "2nd Platoon";
			textShort = "2nd Platoon";
			texture = "flag_AAF";
			assets[] = {};
			subordinates[] = {};
		};
	};
};

//Notifications (the popups you get when completing a task and so on), can be used via BIS_fnc_showNotification
class CfgNotifications
{

	class TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskAssigned_0";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIcon_ca.paa";
		description = "%1";
		priority = 5;
		sound = "taskAssigned";
	};
	class TaskCreated: TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskCreated_0";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconCreated_ca.paa";
		description = "%1";
		priority = 5;
		sound = "taskCreated";
	};
	class TaskSucceeded: TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskSucceeded_0";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		description = "%1";
		priority = 6;
		color[] = {0.7,1.0,0.3,1.0};
		sound = "taskSucceeded";
	};
	class TaskFailed: TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskFailed_0";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_ca.paa";
		description = "%1";
		priority = 6;
		color[] = {1.0,0.3,0.2,1.0};
		sound = "taskFailed";
	};
	class TaskCanceled: TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskCanceled_0";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconCanceled_ca.paa";
		description = "%1";
		priority = 6;
		color[] = {0.7,0.7,0.7,1.0};
		sound = "taskCanceled";
	};
	class TaskUpdated: TaskAssigned
	{
		title = "$STR_A3_CfgNotifications_TaskUpdated_0";
		description = "%1";
		priority = 4;
		sound = "taskUpdated";
	};
	class TrackerPlaced {
		title = "Bug placed";
		iconPicture = "\A3\ui_f\data\map\mapcontrol\taskIconDone_ca.paa";
		description = "Tracking online";
		sound = "taskSucceeded";
	};
};

class CfgAISkills
{
	aimingAccuracy[] = {1, 1, 1, 1};
	aimingShake[] = {1, 1, 1, 1};
	aimingSpeed[] = {1, 1, 1, 1};
	commanding[] = {1, 1, 1, 1};
	courage[] = {1, 1, 1, 1};
	endurance[] = {1, 1, 1, 1};
	general[] = {1, 1, 1, 1};
	reloadSpeed[] = {1, 1, 1, 1};
	spotDistance[] = {1, 1, 1, 1};
	spotTime[] = {1, 1, 1, 1};
};
